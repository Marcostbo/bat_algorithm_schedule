# Case test data

n_days = 36
n_ug = 5
n_rounds = 9

maintenance_duration = [[5, 0, 0, 0, 0, 0, 0, 0, 0],
                        [8, 0, 0, 0, 0, 0, 0, 0, 0],
                        [6, 0, 0, 0, 0, 0, 0, 0, 0],
                        [6, 0, 0, 0, 0, 0, 0, 0, 0],
                        [3, 0, 0, 0, 0, 0, 0, 0, 0]]

a = np.sort(maintenance_duration)
dm_sort = np.zeros(shape=(n_ug, n_rounds))
for im in range(n_rounds):
    for it in range(n_ug):
        dm_sort[it, im] = int(a[it, n_rounds - im - 1])
maintenance_duration = dm_sort

rfo = [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

rfo = np.array(rfo)

vaz_afl_aux = [19883.921589, 20203.761685, 20461.283812, 20601.945018, 20905.857038, 21260.502071,
               21688.485437, 21988.058147, 22271.553480, 22545.329996, 22761.029453, 22967.500212,
               23150.803255, 23340.732115, 23574.452067, 23908.813747, 24257.863790, 24635.077246,
               24951.345853, 25239.747806, 25610.109852, 25957.051659, 26155.295278, 26288.031591,
               26448.608253, 26584.237494, 26772.100663, 26951.747644, 27088.257364, 27251.516128,
               27484.969159, 27718.840943, 28167.073648, 28152.669654, 28343.018337, 28557.019692]

vaz_afl = []
for i in range(int(len(vaz_afl_aux))):
    aux = vaz_afl_aux[i] / 10.
    vaz_afl.append(aux)

vt_max = [[489, 493, 496, 498, 502, 507, 513, 517, 521, 525, 528, 531, 534, 537, 540, 545, 550, 556, 561, 565, 571, 577,
           580, 582, 585, 587, 590, 593, 596, 599, 603, 607, 612, 612, 613, 614],
          [489, 493, 496, 498, 502, 507, 513, 517, 521, 525, 528, 531, 534, 537, 540, 545, 550, 556, 561, 565, 571, 577,
           580, 582, 585, 587, 590, 593, 596, 599, 603, 607, 612, 612, 613, 614],
          [489, 493, 496, 498, 502, 507, 513, 517, 521, 525, 528, 531, 534, 537, 540, 545, 550, 556, 561, 565, 571, 577,
           580, 582, 585, 587, 590, 593, 596, 599, 603, 607, 612, 612, 613, 614],
          [489, 493, 496, 498, 502, 507, 513, 517, 521, 525, 528, 531, 534, 537, 540, 545, 550, 556, 561, 565, 571, 577,
           580, 582, 585, 587, 590, 593, 596, 599, 603, 607, 612, 612, 613, 614],
          [489, 493, 496, 498, 502, 507, 513, 517, 521, 525, 528, 531, 534, 537, 540, 545, 550, 556, 561, 565, 571, 577,
           580, 582, 585, 587, 590, 593, 596, 599, 603, 607, 612, 612, 613, 614]]


# Adapt case test data to data class


@dataclass
class ClassUHEData:
    dr_man: np.ndarray
    rfo: np.ndarray
    vaz_afl: list


UHE_Data = ClassUHEData(dr_man=maintenance_duration, rfo=rfo, vaz_afl=vaz_afl)


@dataclass
class ClassVTData:
    vt_max: list


VT_Data = ClassVTData(vt_max=vt_max)